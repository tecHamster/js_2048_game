{"version":3,"sources":["scripts/main.js"],"names":["COLUMN_LENGTH","winValue","gameField","document","querySelector","tBodies","rows","children","cells","querySelectorAll","scoreBlock","bestBlock","tiles","wasAnyCellReplaced","score","best","localStorage","getItem","xTouchStartPoint","yToucStartPoint","lastY","isPossibleToMove","getEmptyCells","length","i","k","currentCellValue","dataset","num","getCellsByRows","map","row","getCellsByRowsReversed","reverse","getCellsByColumns","columns","column","push","getCellsByReversedColumns","createTile","cell","tile","createElement","classList","add","style","top","offsetTop","left","offsetLeft","append","initTilesAndCells","id","filter","getRandomEmptyCell","emptyCells","emptyCell","Math","floor","random","makeNewCell","textContent","setTimeout","remove","replaceEmptyCells","arrOfCells","isSorted","slide","groupedCells","cellsGroup","cellToRemove","cellToDouble","tileToRemove","tileToDouble","newNumber","forEach","slideUp","slideDown","slideRight","slideLeft","endMove","setItem","handleButtonClick","e","target","handleInput","key","handleTouchStart","firstTouch","touches","clientX","clientY","handleTouchMove","xTouchEndPoint","yTouchEndPoint","xDiff","yDiff","abs","disableScrollReload","documentElement","scrollTop","cancelable","preDefault","stopPropagation","addEventListener","passive"],"mappings":"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","file":"main.80437ef8.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst COLUMN_LENGTH = 4;\nconst winValue = 2048;\n\nconst gameField = document.querySelector('.game-field').tBodies[0];\nconst rows = [...gameField.children];\nconst cells = [...gameField.querySelectorAll('.field-cell')];\nconst scoreBlock = document.querySelector('.game-score');\nconst bestBlock = document.querySelector('.game-best');\nconst tiles = [];\n\nlet wasAnyCellReplaced = false;\nlet score = 0;\nlet best = localStorage.getItem('best') || 0;\n\nlet xTouchStartPoint = null;\nlet yToucStartPoint = null;\nlet lastY = 1;\n\nfunction isPossibleToMove() {\n  if (getEmptyCells().length > 0) {\n    return true;\n  }\n\n  for (let i = 0; i < rows.length; i++) {\n    for (let k = 0; k < rows.length; k++) {\n      const currentCellValue = rows[i].children[k].dataset.num;\n\n      if (k !== rows.length - 1) {\n        const rightCellValue = rows[i].children[k + 1].dataset.num;\n\n        if (currentCellValue === rightCellValue) {\n          return true;\n        }\n      }\n\n      if (i !== rows.length - 1) {\n        const bottomCellValue = rows[i + 1].children[k].dataset.num;\n\n        if (currentCellValue === bottomCellValue) {\n          return true;\n        }\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction getCellsByRows() {\n  return rows.map(row => [...row.children]);\n}\n\nfunction getCellsByRowsReversed() {\n  return getCellsByRows().map(row => row.reverse());\n}\n\nfunction getCellsByColumns() {\n  const columns = [];\n\n  for (let i = 0; i < COLUMN_LENGTH; i++) {\n    const column = [];\n\n    for (let k = 0; k < rows.length; k++) {\n      column.push(rows[k].children[i]);\n    }\n\n    columns.push(column);\n  }\n\n  return columns;\n}\n\nfunction getCellsByReversedColumns() {\n  const columns = [];\n\n  for (let i = 0; i < COLUMN_LENGTH; i++) {\n    const column = [];\n\n    for (let k = 0; k < rows.length; k++) {\n      column.push(rows[rows.length - k - 1].children[i]);\n    }\n\n    columns.push(column);\n  }\n\n  return columns;\n}\n\nfunction createTile(cell) {\n  const tile = document.createElement('div');\n\n  tile.classList.add('tile');\n  tile.style.top = cell.offsetTop + 'px';\n  tile.style.left = cell.offsetLeft + 'px';\n  gameField.append(tile);\n\n  return tile;\n}\n\nfunction initTilesAndCells() {\n  for (let i = 0; i < cells.length; i++) {\n    tiles.push(createTile(cells[i]));\n  }\n\n  for (let i = 0; i < cells.length; i++) {\n    cells[i].dataset.id = i;\n    cells[i].dataset.num = 0;\n  }\n}\n\nfunction getEmptyCells() {\n  return cells.filter(cell => cell.dataset.num === '0');\n}\n\nfunction getRandomEmptyCell() {\n  const emptyCells = getEmptyCells();\n  const emptyCell = emptyCells[Math.floor(Math.random() * emptyCells.length)];\n\n  return emptyCell;\n}\n\nfunction makeNewCell() {\n  const emptyCell = getRandomEmptyCell();\n  const id = emptyCell.dataset.id;\n\n  emptyCell.dataset.num = Math.random() >= 0.9 ? 4 : 2;\n  tiles[id].textContent = emptyCell.dataset.num;\n  tiles[id].classList.add(`tile--${emptyCell.dataset.num}`);\n  tiles[id].classList.add('anim-show');\n\n  setTimeout(() => tiles[id].classList.remove('anim-show'), 500);\n}\n\nfunction replaceEmptyCells(arrOfCells) {\n  let isSorted = false;\n\n  do {\n    isSorted = true;\n\n    for (let k = 0; k < arrOfCells.length; k++) {\n      if (k === arrOfCells.length - 1) {\n        break;\n      }\n\n      if (arrOfCells[k].dataset.num !== '0'\n          && arrOfCells[k + 1].dataset.num === '0') {\n        arrOfCells[k + 1].dataset.num = arrOfCells[k].dataset.num;\n        arrOfCells[k].dataset.num = 0;\n\n        [arrOfCells[k + 1].dataset.id, arrOfCells[k].dataset.id]\n          = [arrOfCells[k].dataset.id, arrOfCells[k + 1].dataset.id];\n\n        wasAnyCellReplaced = true;\n\n        isSorted = false;\n      }\n    }\n  } while (!isSorted);\n}\n\nfunction slide(groupedCells) {\n  for (let i = 0; i < groupedCells.length; i++) {\n    const cellsGroup = groupedCells[i];\n\n    replaceEmptyCells(cellsGroup);\n\n    for (let k = 2; k >= 0; k--) {\n      if (k === cellsGroup.length - 1) {\n        break;\n      }\n\n      if (cellsGroup[k].dataset.num === cellsGroup[k + 1].dataset.num\n          && cellsGroup[k].dataset.num !== '0') {\n        const cellToRemove = cellsGroup[k];\n        const cellToDouble = cellsGroup[k + 1];\n        const tileToRemove = tiles[cellToRemove.dataset.id];\n        const tileToDouble = tiles[cellToDouble.dataset.id];\n        const newNumber = cellToDouble.dataset.num * 2;\n\n        tileToRemove.classList\n          .remove(`tile--${cellToRemove.dataset.num}`);\n        tileToRemove.textContent = '';\n        cellToRemove.dataset.num = 0;\n\n        tileToDouble.classList\n          .remove(`tile--${cellToDouble.dataset.num}`);\n        cellToDouble.dataset.num = newNumber;\n        tileToDouble.textContent = newNumber;\n        tileToDouble.classList.add(`tile--${newNumber}`);\n        tileToDouble.classList.add(`anim-merge`);\n\n        setTimeout(() => tileToDouble.classList.remove(`anim-merge`), 500);\n\n        wasAnyCellReplaced = true;\n        score += newNumber;\n\n        if (newNumber === winValue) {\n          document.querySelector('.message-win').classList.remove('hidden');\n        }\n\n        replaceEmptyCells(cellsGroup);\n      }\n    }\n  }\n\n  cells.forEach(cell => {\n    tiles[cell.dataset.id].style.top = cell.offsetTop + 'px';\n    tiles[cell.dataset.id].style.left = cell.offsetLeft + 'px';\n  });\n}\n\nfunction slideUp() {\n  const cellsArr = getCellsByReversedColumns();\n\n  slide(cellsArr);\n\n  if (wasAnyCellReplaced) {\n    makeNewCell();\n    wasAnyCellReplaced = false;\n  }\n}\n\nfunction slideDown() {\n  const cellsArr = getCellsByColumns();\n\n  slide(cellsArr);\n\n  if (wasAnyCellReplaced) {\n    makeNewCell();\n    wasAnyCellReplaced = false;\n  }\n}\n\nfunction slideRight() {\n  const cellsArr = getCellsByRows();\n\n  slide(cellsArr);\n\n  if (wasAnyCellReplaced) {\n    makeNewCell();\n    wasAnyCellReplaced = false;\n  }\n}\n\nfunction slideLeft() {\n  const cellsArr = getCellsByRowsReversed();\n\n  slide(cellsArr);\n\n  if (wasAnyCellReplaced) {\n    makeNewCell();\n    wasAnyCellReplaced = false;\n  }\n}\n\nfunction endMove() {\n  if (score > best) {\n    localStorage.setItem('best', score);\n    best = score;\n  }\n\n  scoreBlock.textContent = score;\n  bestBlock.textContent = best;\n\n  if (!isPossibleToMove()) {\n    document.querySelector('.message-lose').classList.remove('hidden');\n  }\n}\n\nfunction handleButtonClick(e) {\n  e.target.textContent = 'Restart';\n  e.target.classList.remove('start');\n  e.target.classList.add('restart');\n\n  document.querySelector('.message-start').classList.add('hidden');\n  document.querySelector('.message-lose').classList.add('hidden');\n  document.querySelector('.message-win').classList.add('hidden');\n\n  cells.forEach(cell => {\n    tiles[cell.dataset.id].textContent = '';\n    tiles[cell.dataset.id].classList.remove(`tile--${cell.dataset.num}`);\n    cell.dataset.num = 0;\n  });\n\n  score = 0;\n\n  document.querySelector('.game-score').textContent = 0;\n\n  makeNewCell();\n  makeNewCell();\n}\n\nfunction handleInput(e) {\n  switch (e.key) {\n    case 'ArrowUp':\n      slideUp();\n      break;\n\n    case 'ArrowDown':\n      slideDown();\n      break;\n\n    case 'ArrowRight':\n      slideRight();\n      break;\n\n    case 'ArrowLeft':\n      slideLeft();\n      break;\n  }\n\n  endMove();\n}\n\nfunction handleTouchStart(e) {\n  const firstTouch = e.touches[0];\n\n  xTouchStartPoint = firstTouch.clientX;\n  yToucStartPoint = firstTouch.clientY;\n}\n\nfunction handleTouchMove(e) {\n  if (!xTouchStartPoint || !yToucStartPoint) {\n    return;\n  }\n\n  const xTouchEndPoint = e.touches[0].clientX;\n  const yTouchEndPoint = e.touches[0].clientY;\n\n  const xDiff = xTouchEndPoint - xTouchStartPoint;\n  const yDiff = yTouchEndPoint - yToucStartPoint;\n\n  if (Math.abs(xDiff) > Math.abs(yDiff)) {\n    if (xDiff > 0) {\n      slideRight();\n    } else {\n      slideLeft();\n    }\n  } else {\n    if (yDiff > 0) {\n      slideDown();\n    } else {\n      slideUp();\n    }\n  }\n\n  xTouchStartPoint = null;\n  yToucStartPoint = null;\n\n  endMove();\n}\n\nfunction disableScrollReload(e) {\n  const lastS = document.documentElement.scrollTop;\n\n  if (lastS === 0 && (lastY - e.touches[0].clientY) < 0 && e.cancelable) {\n    e.preDefault();\n    e.stopPropagation();\n  }\n\n  lastY = e.touches[0].clientY;\n}\n\nbestBlock.textContent = best;\n\ninitTilesAndCells();\n\ndocument.querySelector('.button').addEventListener('click', handleButtonClick);\ndocument.addEventListener('keyup', handleInput);\ngameField.addEventListener('touchstart', handleTouchStart, false);\ngameField.addEventListener('touchmove', handleTouchMove, false);\ndocument.addEventListener('touchmove', disableScrollReload, { passive: false });\n"]}